//Database;
create database Ajeevi23_7_2024

use Ajeevi23_7_2024

CREATE TABLE Product(
    Id int IDENTITY(1,1) PRIMARY KEY,
    ProductName nvarchar(100),
    Product_Details nvarchar(500),
    Product_Quantity bigint,
    Product_Price bigint,
    TotalAmount AS (Product_Quantity * Product_Price)  PERSISTED
);

INSERT INTO Product (ProductName, Product_Details, Product_Quantity, Product_Price)
VALUES ('Product A', 'Details of Product A', 10, 500);

CREATE PROCEDURE InsertProduct
    @ProductName nvarchar(100),
    @Product_Details nvarchar(500),
    @Product_Quantity bigint,
    @Product_Price bigint
AS
BEGIN
    INSERT INTO Product (ProductName, Product_Details, Product_Quantity, Product_Price)
    VALUES (@ProductName, @Product_Details, @Product_Quantity, @Product_Price);
END;

CREATE PROCEDURE UpdateProduct
    @Id int,
    @ProductName nvarchar(100),
    @Product_Details nvarchar(500),
    @Product_Quantity bigint,
    @Product_Price bigint
AS
BEGIN
    UPDATE Product
    SET ProductName = @ProductName,
        Product_Details = @Product_Details,
        Product_Quantity = @Product_Quantity,
        Product_Price = @Product_Price
    WHERE Id = @Id;
END;

CREATE PROCEDURE DeleteProduct
    @Id int
AS
BEGIN
    DELETE FROM Product
    WHERE Id = @Id;
END;

CREATE PROCEDURE GetAllProducts
AS
BEGIN
    SELECT Id, ProductName, Product_Details, Product_Quantity, Product_Price, TotalAmount
    FROM Product;
END;

CREATE PROCEDURE GetProductById
    @Id int
AS
BEGIN
    SELECT Id, ProductName, Product_Details, Product_Quantity, Product_Price, TotalAmount
    FROM Product
    WHERE Id = @Id;
END;



//ASP.NET Product create and grid view Display..
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Index.aspx.cs" Inherits="Ajeevi23_7.Index" EnableEventValidation="false" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form1" runat="server">
        <div>
            <div style="margin-left:580px;">
                <table border="1">
                    <tr>
                        <th>Id:</th>
                        <td>
                            <asp:TextBox ID="TextBox1" runat="server"></asp:TextBox>
                        </td>
                    </tr>
                    <tr>
                        <th>Product Name:</th>
                        <td>
                            <asp:TextBox ID="TextBox2" runat="server"></asp:TextBox>
                        </td>
                    </tr>
                    <tr>
                        <th>Product Details:</th>
                        <td>
                            <asp:TextBox ID="TextBox3" runat="server"></asp:TextBox>
                        </td>
                    </tr>
                    <tr>
                        <th>Product Quantity:</th>
                        <td>
                            <asp:TextBox ID="TextBox4" TextMode="Number" runat="server"></asp:TextBox>
                        </td>
                    </tr>
                    <tr>
                        <th>Product Price:</th>
                        <td>
                            <asp:TextBox ID="TextBox5" TextMode="Number" runat="server"></asp:TextBox>
                        </td>
                    </tr>
                    <tr>
                        <th>Total Amount:</th>
                        <td>
                            <asp:TextBox ID="TextBox6" TextMode="Number" runat="server"></asp:TextBox>
                        </td>
                    </tr>
                    <tr>
                        <th colspan="2">
                            <asp:Button ID="Button1" runat="server" Text="Create" OnClick="Button1_Click" />
                            <asp:Button ID="Button2" runat="server" Text="Select" OnClick="Button2_Click" />
                            <asp:Button ID="Button3" runat="server" Text="Update" OnClick="Button3_Click" />
                            <asp:Button ID="Button4" runat="server" Text="Delete" OnClick="Button4_Click" />
                        </th>
                    </tr>
                </table>
            </div>
            <h3 style="text-align: center; background-color: navy; color: white;">Grid View</h3>
            <div style="text-align: right">
                <asp:Button ID="Button5" runat="server" Text="Excelsheet" OnClick="Button5_Click" />
                <%--<asp:LinkButton ID="LinkButton1" runat="server" OnClick="LinkButton1_Click">Excelsheet</asp:LinkButton>--%>
            </div>
            <div>
                <asp:GridView ID="GridView1" runat="server" Width="100%" AutoGenerateColumns="False" OnSelectedIndexChanged="GridView1_SelectedIndexChanged" OnRowCancelingEdit="GridView1_RowCancelingEdit" OnRowUpdating="GridView1_RowUpdating" OnRowDeleting="GridView1_RowDeleting" OnRowEditing="GridView1_RowEditing">
                    <Columns>
                        <asp:BoundField DataField="Id" HeaderText="Id" />
                        <asp:BoundField DataField="ProductName" HeaderText="Product Name" />
                        <asp:BoundField DataField="Product_Details" HeaderText="Product Details" />
                        <asp:BoundField DataField="Product_Quantity" HeaderText="Product Quantity" />
                        <asp:BoundField DataField="Product_Price" HeaderText="Product Price" />
                        <asp:BoundField DataField="TotalAmount" HeaderText="Total Amount" />
                        <asp:CommandField ShowSelectButton="True" HeaderText="Display" />
                        <asp:CommandField ShowEditButton="true" HeaderText="Update" />
                        <asp:CommandField ShowDeleteButton="true" HeaderText="Remove" />
                    </Columns>
                </asp:GridView>
            </div>
        </div>
    </form>
</body>
</html>


//cs file..
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace Ajeevi23_7
{
    public partial class Index : System.Web.UI.Page
    {
        SqlConnection con = new SqlConnection("Data source=DESKTOP-NATOEVE\\SQLEXPRESS;initial catalog=Ajeevi23_7_2024;integrated security=true;");
        public string Query { get; set; }
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                BindGridView();
            }
        }

        protected void Button1_Click(object sender, EventArgs e)
        {
            try
            {
                Query = "InsertProduct";
                using (SqlCommand cmd = new SqlCommand(Query, con))
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@ProductName", TextBox2.Text);
                    cmd.Parameters.AddWithValue("@Product_Details", TextBox3.Text);
                    cmd.Parameters.AddWithValue("@Product_Quantity", TextBox4.Text);
                    cmd.Parameters.AddWithValue("@Product_Price", TextBox5.Text);
                    if (con.State == ConnectionState.Closed)
                    {
                        con.Open();
                    }
                    cmd.ExecuteNonQuery();
                    Response.Write("<script>alert('Record Added Successfully...')</script>");

                }
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message);
            }
            finally
            {
                if (con.State == ConnectionState.Open)
                {
                    con.Close();
                }
            }
        }

        protected void Button2_Click(object sender, EventArgs e)
        {
            try
            {
                Query = "GetProductById";
                using (SqlCommand cmd = new SqlCommand(Query, con))
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@Id", TextBox1.Text);
                    if (con.State == ConnectionState.Closed)
                    {
                        con.Open();
                    }
                    SqlDataReader dr = cmd.ExecuteReader();
                    if (dr.Read())
                    {
                        TextBox1.Text = dr["Id"].ToString();
                        TextBox2.Text = dr["ProductName"].ToString();
                        TextBox3.Text = dr["Product_Details"].ToString();
                        TextBox4.Text = dr["Product_Quantity"].ToString();
                        TextBox5.Text = dr["Product_Price"].ToString();
                        TextBox6.Text = dr["TotalAmount"].ToString();
                    }
                }
            }
            catch (Exception ex)
            {
                Response.Write(ex.ToString());
            }
            finally
            {
                if (con.State == ConnectionState.Open)
                {
                    con.Close();
                }
            }
        }

        protected void Button3_Click(object sender, EventArgs e)
        {
            try
            {
                Query = "UpdateProduct";
                using (SqlCommand cmd = new SqlCommand(Query, con))
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@Id", TextBox1.Text);
                    cmd.Parameters.AddWithValue("@ProductName", TextBox2.Text);
                    cmd.Parameters.AddWithValue("@Product_Details", TextBox3.Text);
                    cmd.Parameters.AddWithValue("@Product_Quantity", TextBox4.Text);
                    cmd.Parameters.AddWithValue("@Product_Price", TextBox5.Text);
                    if (con.State == ConnectionState.Closed)
                    {
                        con.Open();
                    }
                    cmd.ExecuteNonQuery();
                    Response.Write("<script>alert('Record Updated Successfully...')</script>");
                }
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message);
            }
            finally
            {
                if (con.State == ConnectionState.Open)
                {
                    con.Close();
                }
            }
        }

        protected void Button4_Click(object sender, EventArgs e)
        {
            try
            {
                Query = "DeleteProduct";
                using (SqlCommand cmd = new SqlCommand(Query, con))
                {
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@Id", TextBox1.Text);
                    if (con.State == ConnectionState.Closed)
                    {
                        con.Open();
                    }
                    cmd.ExecuteNonQuery();
                    Response.Write("<script>alert('Record Deleted Successfully...')</script>");
                }
            }
            catch (Exception ex)
            {
                throw new Exception(ex.Message);
            }
            finally
            {
                if (con.State == ConnectionState.Open)
                {
                    con.Close();
                }
            }
        }

        private void BindGridView()
        {
            Query = "GetAllProducts";
            using (SqlCommand cmd = new SqlCommand(Query, con))
            {
                cmd.CommandType = CommandType.StoredProcedure;
                SqlDataAdapter sda = new SqlDataAdapter(cmd);
                DataTable dt = new DataTable();
                sda.Fill(dt);
                GridView1.DataSource = dt;
                GridView1.DataBind();
            }
        }

        protected void GridView1_SelectedIndexChanged(object sender, EventArgs e)
        {
            GridViewRow row = GridView1.SelectedRow;
            TextBox1.Text = row.Cells[1].Text;
            TextBox2.Text = row.Cells[2].Text;
            TextBox3.Text = row.Cells[3].Text;
            TextBox4.Text = row.Cells[4].Text;
            TextBox5.Text = row.Cells[5].Text;
            TextBox6.Text = row.Cells[6].Text;
        }

        protected void GridView1_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
        {
            GridView1.EditIndex = -1;
            BindGridView();
        }

        
       
        protected void GridView1_RowEditing(object sender, GridViewEditEventArgs e)
        {
            GridView1.EditIndex = e.NewEditIndex;
            BindGridView();
        }

        public override void VerifyRenderingInServerForm(Control control)
        {
            //required to avoid the run time error "
            //Control 'GridView1' of type 'Grid View' must be placed inside a form tag with runat = server."
        }

        private void ExportGridToExcel()
        {
            Response.Clear();
            Response.Buffer = true;
            Response.ClearContent();
            Response.ClearHeaders();
            Response.Charset = "";
            string FileName = "Vithal" + DateTime.Now + ".xls";
            StringWriter strwritter = new StringWriter();
            HtmlTextWriter htmltextwrtter = new HtmlTextWriter(strwritter);
            Response.Cache.SetCacheability(HttpCacheability.NoCache);
            Response.ContentType = "application/vnd.ms-excel";
            Response.AddHeader("Content-Disposition", "attachment;filename=" + FileName);
            GridView1.GridLines = GridLines.Both;
            GridView1.HeaderStyle.Font.Bold = true;
            GridView1.RenderControl(htmltextwrtter);
            Response.Write(strwritter.ToString());
            Response.End();
        }

        protected void Button5_Click(object sender, EventArgs e)
        {
            ExportGridToExcel();
        }
    }
}
